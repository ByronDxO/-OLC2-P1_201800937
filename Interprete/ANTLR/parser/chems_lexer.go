// Code generated from ChemsLexer.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 62, 394,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
	2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3,
	5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3,
	9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3,
	11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12,
	3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3,
	14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3,
	18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21,
	3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3,
	23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25,
	6, 25, 252, 10, 25, 13, 25, 14, 25, 253, 3, 26, 6, 26, 257, 10, 26, 13,
	26, 14, 26, 258, 3, 26, 3, 26, 6, 26, 263, 10, 26, 13, 26, 14, 26, 264,
	3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 7, 28, 273, 10, 28, 12, 28, 14,
	28, 276, 11, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29,
	3, 29, 3, 29, 3, 29, 5, 29, 289, 10, 29, 3, 30, 3, 30, 7, 30, 293, 10,
	30, 12, 30, 14, 30, 296, 11, 30, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3,
	33, 3, 33, 3, 34, 3, 34, 3, 35, 3, 35, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37,
	3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 41, 3,
	41, 3, 41, 3, 42, 3, 42, 3, 43, 3, 43, 3, 44, 3, 44, 3, 45, 3, 45, 3, 46,
	3, 46, 3, 47, 3, 47, 3, 48, 3, 48, 3, 49, 3, 49, 3, 50, 3, 50, 3, 51, 3,
	51, 3, 52, 3, 52, 3, 53, 3, 53, 3, 54, 3, 54, 3, 55, 3, 55, 3, 55, 3, 56,
	3, 56, 3, 56, 3, 57, 3, 57, 3, 58, 3, 58, 3, 59, 6, 59, 363, 10, 59, 13,
	59, 14, 59, 364, 3, 59, 3, 59, 3, 60, 3, 60, 3, 60, 3, 60, 6, 60, 373,
	10, 60, 13, 60, 14, 60, 374, 3, 60, 3, 60, 3, 60, 3, 60, 3, 60, 3, 61,
	3, 61, 3, 61, 3, 61, 6, 61, 386, 10, 61, 13, 61, 14, 61, 387, 3, 61, 3,
	61, 3, 62, 3, 62, 3, 62, 2, 2, 63, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8,
	15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17,
	33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26,
	51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35,
	69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44,
	87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 99, 51, 101, 52, 103, 53,
	105, 54, 107, 55, 109, 56, 111, 57, 113, 58, 115, 59, 117, 60, 119, 61,
	121, 62, 123, 2, 3, 2, 10, 3, 2, 50, 59, 3, 2, 36, 36, 5, 2, 67, 92, 97,
	97, 99, 124, 6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 5, 2, 11, 12, 15, 15,
	34, 34, 3, 2, 49, 49, 3, 2, 12, 12, 9, 2, 34, 35, 37, 37, 45, 45, 47, 48,
	60, 60, 66, 66, 93, 95, 2, 401, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2,
	7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2,
	2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2,
	2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2,
	2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3,
	2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45,
	3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2,
	53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2,
	2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2,
	2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2,
	2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3,
	2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91,
	3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 2,
	99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105, 3, 2, 2,
	2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 111, 3, 2, 2, 2, 2, 113,
	3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117, 3, 2, 2, 2, 2, 119, 3, 2, 2, 2,
	2, 121, 3, 2, 2, 2, 3, 125, 3, 2, 2, 2, 5, 134, 3, 2, 2, 2, 7, 141, 3,
	2, 2, 2, 9, 148, 3, 2, 2, 2, 11, 155, 3, 2, 2, 2, 13, 159, 3, 2, 2, 2,
	15, 163, 3, 2, 2, 2, 17, 166, 3, 2, 2, 2, 19, 171, 3, 2, 2, 2, 21, 177,
	3, 2, 2, 2, 23, 183, 3, 2, 2, 2, 25, 189, 3, 2, 2, 2, 27, 198, 3, 2, 2,
	2, 29, 205, 3, 2, 2, 2, 31, 210, 3, 2, 2, 2, 33, 214, 3, 2, 2, 2, 35, 217,
	3, 2, 2, 2, 37, 222, 3, 2, 2, 2, 39, 225, 3, 2, 2, 2, 41, 229, 3, 2, 2,
	2, 43, 233, 3, 2, 2, 2, 45, 240, 3, 2, 2, 2, 47, 245, 3, 2, 2, 2, 49, 251,
	3, 2, 2, 2, 51, 256, 3, 2, 2, 2, 53, 266, 3, 2, 2, 2, 55, 270, 3, 2, 2,
	2, 57, 288, 3, 2, 2, 2, 59, 290, 3, 2, 2, 2, 61, 297, 3, 2, 2, 2, 63, 300,
	3, 2, 2, 2, 65, 302, 3, 2, 2, 2, 67, 304, 3, 2, 2, 2, 69, 306, 3, 2, 2,
	2, 71, 308, 3, 2, 2, 2, 73, 310, 3, 2, 2, 2, 75, 313, 3, 2, 2, 2, 77, 316,
	3, 2, 2, 2, 79, 319, 3, 2, 2, 2, 81, 322, 3, 2, 2, 2, 83, 325, 3, 2, 2,
	2, 85, 327, 3, 2, 2, 2, 87, 329, 3, 2, 2, 2, 89, 331, 3, 2, 2, 2, 91, 333,
	3, 2, 2, 2, 93, 335, 3, 2, 2, 2, 95, 337, 3, 2, 2, 2, 97, 339, 3, 2, 2,
	2, 99, 341, 3, 2, 2, 2, 101, 343, 3, 2, 2, 2, 103, 345, 3, 2, 2, 2, 105,
	347, 3, 2, 2, 2, 107, 349, 3, 2, 2, 2, 109, 351, 3, 2, 2, 2, 111, 354,
	3, 2, 2, 2, 113, 357, 3, 2, 2, 2, 115, 359, 3, 2, 2, 2, 117, 362, 3, 2,
	2, 2, 119, 368, 3, 2, 2, 2, 121, 381, 3, 2, 2, 2, 123, 391, 3, 2, 2, 2,
	125, 126, 7, 114, 2, 2, 126, 127, 7, 116, 2, 2, 127, 128, 7, 107, 2, 2,
	128, 129, 7, 112, 2, 2, 129, 130, 7, 118, 2, 2, 130, 131, 7, 110, 2, 2,
	131, 132, 7, 112, 2, 2, 132, 133, 7, 35, 2, 2, 133, 4, 3, 2, 2, 2, 134,
	135, 7, 112, 2, 2, 135, 136, 7, 119, 2, 2, 136, 137, 7, 111, 2, 2, 137,
	138, 7, 100, 2, 2, 138, 139, 7, 103, 2, 2, 139, 140, 7, 116, 2, 2, 140,
	6, 3, 2, 2, 2, 141, 142, 7, 99, 2, 2, 142, 143, 7, 117, 2, 2, 143, 144,
	7, 34, 2, 2, 144, 145, 7, 104, 2, 2, 145, 146, 7, 56, 2, 2, 146, 147, 7,
	54, 2, 2, 147, 8, 3, 2, 2, 2, 148, 149, 7, 99, 2, 2, 149, 150, 7, 117,
	2, 2, 150, 151, 7, 34, 2, 2, 151, 152, 7, 107, 2, 2, 152, 153, 7, 56, 2,
	2, 153, 154, 7, 54, 2, 2, 154, 10, 3, 2, 2, 2, 155, 156, 7, 110, 2, 2,
	156, 157, 7, 103, 2, 2, 157, 158, 7, 118, 2, 2, 158, 12, 3, 2, 2, 2, 159,
	160, 7, 111, 2, 2, 160, 161, 7, 119, 2, 2, 161, 162, 7, 118, 2, 2, 162,
	14, 3, 2, 2, 2, 163, 164, 7, 107, 2, 2, 164, 165, 7, 104, 2, 2, 165, 16,
	3, 2, 2, 2, 166, 167, 7, 103, 2, 2, 167, 168, 7, 110, 2, 2, 168, 169, 7,
	117, 2, 2, 169, 170, 7, 103, 2, 2, 170, 18, 3, 2, 2, 2, 171, 172, 7, 111,
	2, 2, 172, 173, 7, 99, 2, 2, 173, 174, 7, 118, 2, 2, 174, 175, 7, 101,
	2, 2, 175, 176, 7, 106, 2, 2, 176, 20, 3, 2, 2, 2, 177, 178, 7, 121, 2,
	2, 178, 179, 7, 106, 2, 2, 179, 180, 7, 107, 2, 2, 180, 181, 7, 110, 2,
	2, 181, 182, 7, 103, 2, 2, 182, 22, 3, 2, 2, 2, 183, 184, 7, 100, 2, 2,
	184, 185, 7, 116, 2, 2, 185, 186, 7, 103, 2, 2, 186, 187, 7, 99, 2, 2,
	187, 188, 7, 109, 2, 2, 188, 24, 3, 2, 2, 2, 189, 190, 7, 101, 2, 2, 190,
	191, 7, 113, 2, 2, 191, 192, 7, 112, 2, 2, 192, 193, 7, 118, 2, 2, 193,
	194, 7, 107, 2, 2, 194, 195, 7, 112, 2, 2, 195, 196, 7, 119, 2, 2, 196,
	197, 7, 103, 2, 2, 197, 26, 3, 2, 2, 2, 198, 199, 7, 116, 2, 2, 199, 200,
	7, 103, 2, 2, 200, 201, 7, 118, 2, 2, 201, 202, 7, 119, 2, 2, 202, 203,
	7, 116, 2, 2, 203, 204, 7, 112, 2, 2, 204, 28, 3, 2, 2, 2, 205, 206, 7,
	110, 2, 2, 206, 207, 7, 113, 2, 2, 207, 208, 7, 113, 2, 2, 208, 209, 7,
	114, 2, 2, 209, 30, 3, 2, 2, 2, 210, 211, 7, 104, 2, 2, 211, 212, 7, 113,
	2, 2, 212, 213, 7, 116, 2, 2, 213, 32, 3, 2, 2, 2, 214, 215, 7, 107, 2,
	2, 215, 216, 7, 112, 2, 2, 216, 34, 3, 2, 2, 2, 217, 218, 7, 111, 2, 2,
	218, 219, 7, 99, 2, 2, 219, 220, 7, 107, 2, 2, 220, 221, 7, 112, 2, 2,
	221, 36, 3, 2, 2, 2, 222, 223, 7, 104, 2, 2, 223, 224, 7, 112, 2, 2, 224,
	38, 3, 2, 2, 2, 225, 226, 7, 107, 2, 2, 226, 227, 7, 56, 2, 2, 227, 228,
	7, 54, 2, 2, 228, 40, 3, 2, 2, 2, 229, 230, 7, 104, 2, 2, 230, 231, 7,
	56, 2, 2, 231, 232, 7, 54, 2, 2, 232, 42, 3, 2, 2, 2, 233, 234, 7, 85,
	2, 2, 234, 235, 7, 118, 2, 2, 235, 236, 7, 116, 2, 2, 236, 237, 7, 107,
	2, 2, 237, 238, 7, 112, 2, 2, 238, 239, 7, 105, 2, 2, 239, 44, 3, 2, 2,
	2, 240, 241, 7, 100, 2, 2, 241, 242, 7, 113, 2, 2, 242, 243, 7, 113, 2,
	2, 243, 244, 7, 110, 2, 2, 244, 46, 3, 2, 2, 2, 245, 246, 7, 40, 2, 2,
	246, 247, 7, 117, 2, 2, 247, 248, 7, 118, 2, 2, 248, 249, 7, 116, 2, 2,
	249, 48, 3, 2, 2, 2, 250, 252, 9, 2, 2, 2, 251, 250, 3, 2, 2, 2, 252, 253,
	3, 2, 2, 2, 253, 251, 3, 2, 2, 2, 253, 254, 3, 2, 2, 2, 254, 50, 3, 2,
	2, 2, 255, 257, 9, 2, 2, 2, 256, 255, 3, 2, 2, 2, 257, 258, 3, 2, 2, 2,
	258, 256, 3, 2, 2, 2, 258, 259, 3, 2, 2, 2, 259, 260, 3, 2, 2, 2, 260,
	262, 7, 48, 2, 2, 261, 263, 9, 2, 2, 2, 262, 261, 3, 2, 2, 2, 263, 264,
	3, 2, 2, 2, 264, 262, 3, 2, 2, 2, 264, 265, 3, 2, 2, 2, 265, 52, 3, 2,
	2, 2, 266, 267, 7, 41, 2, 2, 267, 268, 10, 3, 2, 2, 268, 269, 7, 41, 2,
	2, 269, 54, 3, 2, 2, 2, 270, 274, 7, 36, 2, 2, 271, 273, 10, 3, 2, 2, 272,
	271, 3, 2, 2, 2, 273, 276, 3, 2, 2, 2, 274, 272, 3, 2, 2, 2, 274, 275,
	3, 2, 2, 2, 275, 277, 3, 2, 2, 2, 276, 274, 3, 2, 2, 2, 277, 278, 7, 36,
	2, 2, 278, 56, 3, 2, 2, 2, 279, 280, 7, 118, 2, 2, 280, 281, 7, 116, 2,
	2, 281, 282, 7, 119, 2, 2, 282, 289, 7, 103, 2, 2, 283, 284, 7, 104, 2,
	2, 284, 285, 7, 99, 2, 2, 285, 286, 7, 110, 2, 2, 286, 287, 7, 117, 2,
	2, 287, 289, 7, 103, 2, 2, 288, 279, 3, 2, 2, 2, 288, 283, 3, 2, 2, 2,
	289, 58, 3, 2, 2, 2, 290, 294, 9, 4, 2, 2, 291, 293, 9, 5, 2, 2, 292, 291,
	3, 2, 2, 2, 293, 296, 3, 2, 2, 2, 294, 292, 3, 2, 2, 2, 294, 295, 3, 2,
	2, 2, 295, 60, 3, 2, 2, 2, 296, 294, 3, 2, 2, 2, 297, 298, 7, 48, 2, 2,
	298, 299, 7, 48, 2, 2, 299, 62, 3, 2, 2, 2, 300, 301, 7, 48, 2, 2, 301,
	64, 3, 2, 2, 2, 302, 303, 7, 61, 2, 2, 303, 66, 3, 2, 2, 2, 304, 305, 7,
	46, 2, 2, 305, 68, 3, 2, 2, 2, 306, 307, 7, 60, 2, 2, 307, 70, 3, 2, 2,
	2, 308, 309, 7, 63, 2, 2, 309, 72, 3, 2, 2, 2, 310, 311, 7, 63, 2, 2, 311,
	312, 7, 63, 2, 2, 312, 74, 3, 2, 2, 2, 313, 314, 7, 64, 2, 2, 314, 315,
	7, 63, 2, 2, 315, 76, 3, 2, 2, 2, 316, 317, 7, 63, 2, 2, 317, 318, 7, 64,
	2, 2, 318, 78, 3, 2, 2, 2, 319, 320, 7, 62, 2, 2, 320, 321, 7, 63, 2, 2,
	321, 80, 3, 2, 2, 2, 322, 323, 7, 35, 2, 2, 323, 324, 7, 63, 2, 2, 324,
	82, 3, 2, 2, 2, 325, 326, 7, 64, 2, 2, 326, 84, 3, 2, 2, 2, 327, 328, 7,
	62, 2, 2, 328, 86, 3, 2, 2, 2, 329, 330, 7, 44, 2, 2, 330, 88, 3, 2, 2,
	2, 331, 332, 7, 49, 2, 2, 332, 90, 3, 2, 2, 2, 333, 334, 7, 39, 2, 2, 334,
	92, 3, 2, 2, 2, 335, 336, 7, 45, 2, 2, 336, 94, 3, 2, 2, 2, 337, 338, 7,
	47, 2, 2, 338, 96, 3, 2, 2, 2, 339, 340, 7, 42, 2, 2, 340, 98, 3, 2, 2,
	2, 341, 342, 7, 43, 2, 2, 342, 100, 3, 2, 2, 2, 343, 344, 7, 125, 2, 2,
	344, 102, 3, 2, 2, 2, 345, 346, 7, 127, 2, 2, 346, 104, 3, 2, 2, 2, 347,
	348, 7, 93, 2, 2, 348, 106, 3, 2, 2, 2, 349, 350, 7, 95, 2, 2, 350, 108,
	3, 2, 2, 2, 351, 352, 7, 40, 2, 2, 352, 353, 7, 40, 2, 2, 353, 110, 3,
	2, 2, 2, 354, 355, 7, 126, 2, 2, 355, 356, 7, 126, 2, 2, 356, 112, 3, 2,
	2, 2, 357, 358, 7, 126, 2, 2, 358, 114, 3, 2, 2, 2, 359, 360, 7, 35, 2,
	2, 360, 116, 3, 2, 2, 2, 361, 363, 9, 6, 2, 2, 362, 361, 3, 2, 2, 2, 363,
	364, 3, 2, 2, 2, 364, 362, 3, 2, 2, 2, 364, 365, 3, 2, 2, 2, 365, 366,
	3, 2, 2, 2, 366, 367, 8, 59, 2, 2, 367, 118, 3, 2, 2, 2, 368, 369, 7, 49,
	2, 2, 369, 370, 7, 44, 2, 2, 370, 372, 3, 2, 2, 2, 371, 373, 10, 7, 2,
	2, 372, 371, 3, 2, 2, 2, 373, 374, 3, 2, 2, 2, 374, 372, 3, 2, 2, 2, 374,
	375, 3, 2, 2, 2, 375, 376, 3, 2, 2, 2, 376, 377, 7, 44, 2, 2, 377, 378,
	7, 49, 2, 2, 378, 379, 3, 2, 2, 2, 379, 380, 8, 60, 2, 2, 380, 120, 3,
	2, 2, 2, 381, 382, 7, 49, 2, 2, 382, 383, 7, 49, 2, 2, 383, 385, 3, 2,
	2, 2, 384, 386, 10, 8, 2, 2, 385, 384, 3, 2, 2, 2, 386, 387, 3, 2, 2, 2,
	387, 385, 3, 2, 2, 2, 387, 388, 3, 2, 2, 2, 388, 389, 3, 2, 2, 2, 389,
	390, 8, 61, 2, 2, 390, 122, 3, 2, 2, 2, 391, 392, 7, 94, 2, 2, 392, 393,
	9, 9, 2, 2, 393, 124, 3, 2, 2, 2, 12, 2, 253, 258, 264, 274, 288, 294,
	364, 374, 387, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'println!'", "'number'", "'as f64'", "'as i64'", "'let'", "'mut'",
	"'if'", "'else'", "'match'", "'while'", "'break'", "'continue'", "'return'",
	"'loop'", "'for'", "'in'", "'main'", "'fn'", "'i64'", "'f64'", "'String'",
	"'bool'", "'&str'", "", "", "", "", "", "", "'..'", "'.'", "';'", "','",
	"':'", "'='", "'=='", "'>='", "'=>'", "'<='", "'!='", "'>'", "'<'", "'*'",
	"'/'", "'%'", "'+'", "'-'", "'('", "')'", "'{'", "'}'", "'['", "']'", "'&&'",
	"'||'", "'|'", "'!'",
}

var lexerSymbolicNames = []string{
	"", "R_PRINTLN", "P_NUMBER", "R_AS_DOUBLE", "R_AS_INTEGER", "R_LET", "R_MUT",
	"R_IF", "R_ELSE", "R_MATCH", "R_WHILE", "R_BREAK", "R_CONTINUE", "R_RETURN",
	"R_LOOP", "R_FOR", "R_IN", "R_MAIN", "R_FUNCTION", "R_INT", "R_FLOAT",
	"R_STRING", "R_BOOL", "R_STR", "NUMBER", "DOUBLE", "CHAR", "STRING", "BOOLEAN",
	"ID", "TK_DOBLEPUNTO", "TK_PUNTO", "TK_PUNTOCOMA", "TK_COMA", "TK_DOSPUNTOS",
	"TK_IGUAL", "TK_IGUALIGUAL", "TK_MAYORIGUAL", "TK_IGUALMAYOR", "TK_MENORIGUAL",
	"TK_DIFIGUAL", "TK_MAYOR", "TK_MENOR", "TK_MULT", "TK_DIV", "TK_MODULO",
	"TK_MAS", "TK_MENOS", "TK_PARA", "TK_PARC", "TK_LLAVEA", "TK_LLAVEC", "TK_CORA",
	"TK_CORC", "TK_AND", "TK_OR", "TK_BARRA", "TK_NOT", "WHITESPACE", "TK_MULTI",
	"TK_LINE",
}

var lexerRuleNames = []string{
	"R_PRINTLN", "P_NUMBER", "R_AS_DOUBLE", "R_AS_INTEGER", "R_LET", "R_MUT",
	"R_IF", "R_ELSE", "R_MATCH", "R_WHILE", "R_BREAK", "R_CONTINUE", "R_RETURN",
	"R_LOOP", "R_FOR", "R_IN", "R_MAIN", "R_FUNCTION", "R_INT", "R_FLOAT",
	"R_STRING", "R_BOOL", "R_STR", "NUMBER", "DOUBLE", "CHAR", "STRING", "BOOLEAN",
	"ID", "TK_DOBLEPUNTO", "TK_PUNTO", "TK_PUNTOCOMA", "TK_COMA", "TK_DOSPUNTOS",
	"TK_IGUAL", "TK_IGUALIGUAL", "TK_MAYORIGUAL", "TK_IGUALMAYOR", "TK_MENORIGUAL",
	"TK_DIFIGUAL", "TK_MAYOR", "TK_MENOR", "TK_MULT", "TK_DIV", "TK_MODULO",
	"TK_MAS", "TK_MENOS", "TK_PARA", "TK_PARC", "TK_LLAVEA", "TK_LLAVEC", "TK_CORA",
	"TK_CORC", "TK_AND", "TK_OR", "TK_BARRA", "TK_NOT", "WHITESPACE", "TK_MULTI",
	"TK_LINE", "ESC_SEQ",
}

type ChemsLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewChemsLexer(input antlr.CharStream) *ChemsLexer {

	l := new(ChemsLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ChemsLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ChemsLexer tokens.
const (
	ChemsLexerR_PRINTLN     = 1
	ChemsLexerP_NUMBER      = 2
	ChemsLexerR_AS_DOUBLE   = 3
	ChemsLexerR_AS_INTEGER  = 4
	ChemsLexerR_LET         = 5
	ChemsLexerR_MUT         = 6
	ChemsLexerR_IF          = 7
	ChemsLexerR_ELSE        = 8
	ChemsLexerR_MATCH       = 9
	ChemsLexerR_WHILE       = 10
	ChemsLexerR_BREAK       = 11
	ChemsLexerR_CONTINUE    = 12
	ChemsLexerR_RETURN      = 13
	ChemsLexerR_LOOP        = 14
	ChemsLexerR_FOR         = 15
	ChemsLexerR_IN          = 16
	ChemsLexerR_MAIN        = 17
	ChemsLexerR_FUNCTION    = 18
	ChemsLexerR_INT         = 19
	ChemsLexerR_FLOAT       = 20
	ChemsLexerR_STRING      = 21
	ChemsLexerR_BOOL        = 22
	ChemsLexerR_STR         = 23
	ChemsLexerNUMBER        = 24
	ChemsLexerDOUBLE        = 25
	ChemsLexerCHAR          = 26
	ChemsLexerSTRING        = 27
	ChemsLexerBOOLEAN       = 28
	ChemsLexerID            = 29
	ChemsLexerTK_DOBLEPUNTO = 30
	ChemsLexerTK_PUNTO      = 31
	ChemsLexerTK_PUNTOCOMA  = 32
	ChemsLexerTK_COMA       = 33
	ChemsLexerTK_DOSPUNTOS  = 34
	ChemsLexerTK_IGUAL      = 35
	ChemsLexerTK_IGUALIGUAL = 36
	ChemsLexerTK_MAYORIGUAL = 37
	ChemsLexerTK_IGUALMAYOR = 38
	ChemsLexerTK_MENORIGUAL = 39
	ChemsLexerTK_DIFIGUAL   = 40
	ChemsLexerTK_MAYOR      = 41
	ChemsLexerTK_MENOR      = 42
	ChemsLexerTK_MULT       = 43
	ChemsLexerTK_DIV        = 44
	ChemsLexerTK_MODULO     = 45
	ChemsLexerTK_MAS        = 46
	ChemsLexerTK_MENOS      = 47
	ChemsLexerTK_PARA       = 48
	ChemsLexerTK_PARC       = 49
	ChemsLexerTK_LLAVEA     = 50
	ChemsLexerTK_LLAVEC     = 51
	ChemsLexerTK_CORA       = 52
	ChemsLexerTK_CORC       = 53
	ChemsLexerTK_AND        = 54
	ChemsLexerTK_OR         = 55
	ChemsLexerTK_BARRA      = 56
	ChemsLexerTK_NOT        = 57
	ChemsLexerWHITESPACE    = 58
	ChemsLexerTK_MULTI      = 59
	ChemsLexerTK_LINE       = 60
)
