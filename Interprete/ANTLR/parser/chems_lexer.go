// Code generated from ChemsLexer.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 36, 233,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2,
	3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
	3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 6, 7, 112, 10, 7,
	13, 7, 14, 7, 113, 3, 8, 6, 8, 117, 10, 8, 13, 8, 14, 8, 118, 3, 8, 3,
	8, 6, 8, 123, 10, 8, 13, 8, 14, 8, 124, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10,
	3, 10, 7, 10, 133, 10, 10, 12, 10, 14, 10, 136, 11, 10, 3, 10, 3, 10, 3,
	11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 5, 11, 149,
	10, 11, 3, 12, 3, 12, 7, 12, 153, 10, 12, 12, 12, 14, 12, 156, 11, 12,
	3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3,
	17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21,
	3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3,
	27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32,
	3, 32, 3, 33, 6, 33, 202, 10, 33, 13, 33, 14, 33, 203, 3, 33, 3, 33, 3,
	34, 3, 34, 3, 34, 3, 34, 6, 34, 212, 10, 34, 13, 34, 14, 34, 213, 3, 34,
	3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 35, 6, 35, 225, 10,
	35, 13, 35, 14, 35, 226, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 2, 2, 37, 3,
	3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13,
	25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22,
	43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31,
	61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 2, 3, 2, 10, 3, 2, 50, 59,
	3, 2, 36, 36, 5, 2, 67, 92, 97, 97, 99, 124, 6, 2, 50, 59, 67, 92, 97,
	97, 99, 124, 5, 2, 11, 12, 15, 15, 34, 34, 3, 2, 49, 49, 3, 2, 12, 12,
	9, 2, 34, 35, 37, 37, 45, 45, 47, 48, 60, 60, 66, 66, 93, 95, 2, 240, 2,
	3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2,
	11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2,
	2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2,
	2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2,
	2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3,
	2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49,
	3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2,
	57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2,
	2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 3, 73, 3, 2, 2,
	2, 5, 82, 3, 2, 2, 2, 7, 89, 3, 2, 2, 2, 9, 96, 3, 2, 2, 2, 11, 103, 3,
	2, 2, 2, 13, 111, 3, 2, 2, 2, 15, 116, 3, 2, 2, 2, 17, 126, 3, 2, 2, 2,
	19, 130, 3, 2, 2, 2, 21, 148, 3, 2, 2, 2, 23, 150, 3, 2, 2, 2, 25, 157,
	3, 2, 2, 2, 27, 159, 3, 2, 2, 2, 29, 161, 3, 2, 2, 2, 31, 163, 3, 2, 2,
	2, 33, 165, 3, 2, 2, 2, 35, 168, 3, 2, 2, 2, 37, 171, 3, 2, 2, 2, 39, 174,
	3, 2, 2, 2, 41, 176, 3, 2, 2, 2, 43, 178, 3, 2, 2, 2, 45, 180, 3, 2, 2,
	2, 47, 182, 3, 2, 2, 2, 49, 184, 3, 2, 2, 2, 51, 186, 3, 2, 2, 2, 53, 188,
	3, 2, 2, 2, 55, 190, 3, 2, 2, 2, 57, 192, 3, 2, 2, 2, 59, 194, 3, 2, 2,
	2, 61, 196, 3, 2, 2, 2, 63, 198, 3, 2, 2, 2, 65, 201, 3, 2, 2, 2, 67, 207,
	3, 2, 2, 2, 69, 220, 3, 2, 2, 2, 71, 230, 3, 2, 2, 2, 73, 74, 7, 114, 2,
	2, 74, 75, 7, 116, 2, 2, 75, 76, 7, 107, 2, 2, 76, 77, 7, 112, 2, 2, 77,
	78, 7, 118, 2, 2, 78, 79, 7, 110, 2, 2, 79, 80, 7, 112, 2, 2, 80, 81, 7,
	35, 2, 2, 81, 4, 3, 2, 2, 2, 82, 83, 7, 112, 2, 2, 83, 84, 7, 119, 2, 2,
	84, 85, 7, 111, 2, 2, 85, 86, 7, 100, 2, 2, 86, 87, 7, 103, 2, 2, 87, 88,
	7, 116, 2, 2, 88, 6, 3, 2, 2, 2, 89, 90, 7, 117, 2, 2, 90, 91, 7, 118,
	2, 2, 91, 92, 7, 116, 2, 2, 92, 93, 7, 107, 2, 2, 93, 94, 7, 112, 2, 2,
	94, 95, 7, 105, 2, 2, 95, 8, 3, 2, 2, 2, 96, 97, 7, 99, 2, 2, 97, 98, 7,
	117, 2, 2, 98, 99, 7, 34, 2, 2, 99, 100, 7, 104, 2, 2, 100, 101, 7, 56,
	2, 2, 101, 102, 7, 54, 2, 2, 102, 10, 3, 2, 2, 2, 103, 104, 7, 99, 2, 2,
	104, 105, 7, 117, 2, 2, 105, 106, 7, 34, 2, 2, 106, 107, 7, 107, 2, 2,
	107, 108, 7, 56, 2, 2, 108, 109, 7, 54, 2, 2, 109, 12, 3, 2, 2, 2, 110,
	112, 9, 2, 2, 2, 111, 110, 3, 2, 2, 2, 112, 113, 3, 2, 2, 2, 113, 111,
	3, 2, 2, 2, 113, 114, 3, 2, 2, 2, 114, 14, 3, 2, 2, 2, 115, 117, 9, 2,
	2, 2, 116, 115, 3, 2, 2, 2, 117, 118, 3, 2, 2, 2, 118, 116, 3, 2, 2, 2,
	118, 119, 3, 2, 2, 2, 119, 120, 3, 2, 2, 2, 120, 122, 7, 48, 2, 2, 121,
	123, 9, 2, 2, 2, 122, 121, 3, 2, 2, 2, 123, 124, 3, 2, 2, 2, 124, 122,
	3, 2, 2, 2, 124, 125, 3, 2, 2, 2, 125, 16, 3, 2, 2, 2, 126, 127, 7, 41,
	2, 2, 127, 128, 10, 3, 2, 2, 128, 129, 7, 41, 2, 2, 129, 18, 3, 2, 2, 2,
	130, 134, 7, 36, 2, 2, 131, 133, 10, 3, 2, 2, 132, 131, 3, 2, 2, 2, 133,
	136, 3, 2, 2, 2, 134, 132, 3, 2, 2, 2, 134, 135, 3, 2, 2, 2, 135, 137,
	3, 2, 2, 2, 136, 134, 3, 2, 2, 2, 137, 138, 7, 36, 2, 2, 138, 20, 3, 2,
	2, 2, 139, 140, 7, 118, 2, 2, 140, 141, 7, 116, 2, 2, 141, 142, 7, 119,
	2, 2, 142, 149, 7, 103, 2, 2, 143, 144, 7, 104, 2, 2, 144, 145, 7, 99,
	2, 2, 145, 146, 7, 110, 2, 2, 146, 147, 7, 117, 2, 2, 147, 149, 7, 103,
	2, 2, 148, 139, 3, 2, 2, 2, 148, 143, 3, 2, 2, 2, 149, 22, 3, 2, 2, 2,
	150, 154, 9, 4, 2, 2, 151, 153, 9, 5, 2, 2, 152, 151, 3, 2, 2, 2, 153,
	156, 3, 2, 2, 2, 154, 152, 3, 2, 2, 2, 154, 155, 3, 2, 2, 2, 155, 24, 3,
	2, 2, 2, 156, 154, 3, 2, 2, 2, 157, 158, 7, 48, 2, 2, 158, 26, 3, 2, 2,
	2, 159, 160, 7, 61, 2, 2, 160, 28, 3, 2, 2, 2, 161, 162, 7, 46, 2, 2, 162,
	30, 3, 2, 2, 2, 163, 164, 7, 63, 2, 2, 164, 32, 3, 2, 2, 2, 165, 166, 7,
	64, 2, 2, 166, 167, 7, 63, 2, 2, 167, 34, 3, 2, 2, 2, 168, 169, 7, 62,
	2, 2, 169, 170, 7, 63, 2, 2, 170, 36, 3, 2, 2, 2, 171, 172, 7, 35, 2, 2,
	172, 173, 7, 63, 2, 2, 173, 38, 3, 2, 2, 2, 174, 175, 7, 64, 2, 2, 175,
	40, 3, 2, 2, 2, 176, 177, 7, 62, 2, 2, 177, 42, 3, 2, 2, 2, 178, 179, 7,
	44, 2, 2, 179, 44, 3, 2, 2, 2, 180, 181, 7, 49, 2, 2, 181, 46, 3, 2, 2,
	2, 182, 183, 7, 39, 2, 2, 183, 48, 3, 2, 2, 2, 184, 185, 7, 45, 2, 2, 185,
	50, 3, 2, 2, 2, 186, 187, 7, 47, 2, 2, 187, 52, 3, 2, 2, 2, 188, 189, 7,
	42, 2, 2, 189, 54, 3, 2, 2, 2, 190, 191, 7, 43, 2, 2, 191, 56, 3, 2, 2,
	2, 192, 193, 7, 125, 2, 2, 193, 58, 3, 2, 2, 2, 194, 195, 7, 127, 2, 2,
	195, 60, 3, 2, 2, 2, 196, 197, 7, 93, 2, 2, 197, 62, 3, 2, 2, 2, 198, 199,
	7, 95, 2, 2, 199, 64, 3, 2, 2, 2, 200, 202, 9, 6, 2, 2, 201, 200, 3, 2,
	2, 2, 202, 203, 3, 2, 2, 2, 203, 201, 3, 2, 2, 2, 203, 204, 3, 2, 2, 2,
	204, 205, 3, 2, 2, 2, 205, 206, 8, 33, 2, 2, 206, 66, 3, 2, 2, 2, 207,
	208, 7, 49, 2, 2, 208, 209, 7, 44, 2, 2, 209, 211, 3, 2, 2, 2, 210, 212,
	10, 7, 2, 2, 211, 210, 3, 2, 2, 2, 212, 213, 3, 2, 2, 2, 213, 211, 3, 2,
	2, 2, 213, 214, 3, 2, 2, 2, 214, 215, 3, 2, 2, 2, 215, 216, 7, 44, 2, 2,
	216, 217, 7, 49, 2, 2, 217, 218, 3, 2, 2, 2, 218, 219, 8, 34, 2, 2, 219,
	68, 3, 2, 2, 2, 220, 221, 7, 49, 2, 2, 221, 222, 7, 49, 2, 2, 222, 224,
	3, 2, 2, 2, 223, 225, 10, 8, 2, 2, 224, 223, 3, 2, 2, 2, 225, 226, 3, 2,
	2, 2, 226, 224, 3, 2, 2, 2, 226, 227, 3, 2, 2, 2, 227, 228, 3, 2, 2, 2,
	228, 229, 8, 35, 2, 2, 229, 70, 3, 2, 2, 2, 230, 231, 7, 94, 2, 2, 231,
	232, 9, 9, 2, 2, 232, 72, 3, 2, 2, 2, 12, 2, 113, 118, 124, 134, 148, 154,
	203, 213, 226, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'println!'", "'number'", "'string'", "'as f64'", "'as i64'", "", "",
	"", "", "", "", "'.'", "';'", "','", "'='", "'>='", "'<='", "'!='", "'>'",
	"'<'", "'*'", "'/'", "'%'", "'+'", "'-'", "'('", "')'", "'{'", "'}'", "'['",
	"']'",
}

var lexerSymbolicNames = []string{
	"", "R_PRINTLN", "P_NUMBER", "P_STRING", "R_AS_DOUBLE", "R_AS_INTEGER",
	"NUMBER", "DOUBLE", "CHAR", "STRING", "BOOLEAN", "ID", "TK_PUNTO", "TK_PUNTOCOMA",
	"TK_COMA", "TK_IGUAL", "TK_MAYORIGUAL", "TK_MENORIGUAL", "TK_DIFIGUAL",
	"TK_MAYOR", "TK_MENOR", "TK_MULT", "TK_DIV", "TK_MODULO", "TK_MAS", "TK_MENOS",
	"TK_PARA", "TK_PARC", "TK_LLAVEA", "TK_LLAVEC", "TK_CORA", "TK_CORC", "WHITESPACE",
	"TK_MULTI", "TK_LINE",
}

var lexerRuleNames = []string{
	"R_PRINTLN", "P_NUMBER", "P_STRING", "R_AS_DOUBLE", "R_AS_INTEGER", "NUMBER",
	"DOUBLE", "CHAR", "STRING", "BOOLEAN", "ID", "TK_PUNTO", "TK_PUNTOCOMA",
	"TK_COMA", "TK_IGUAL", "TK_MAYORIGUAL", "TK_MENORIGUAL", "TK_DIFIGUAL",
	"TK_MAYOR", "TK_MENOR", "TK_MULT", "TK_DIV", "TK_MODULO", "TK_MAS", "TK_MENOS",
	"TK_PARA", "TK_PARC", "TK_LLAVEA", "TK_LLAVEC", "TK_CORA", "TK_CORC", "WHITESPACE",
	"TK_MULTI", "TK_LINE", "ESC_SEQ",
}

type ChemsLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewChemsLexer(input antlr.CharStream) *ChemsLexer {

	l := new(ChemsLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ChemsLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ChemsLexer tokens.
const (
	ChemsLexerR_PRINTLN     = 1
	ChemsLexerP_NUMBER      = 2
	ChemsLexerP_STRING      = 3
	ChemsLexerR_AS_DOUBLE   = 4
	ChemsLexerR_AS_INTEGER  = 5
	ChemsLexerNUMBER        = 6
	ChemsLexerDOUBLE        = 7
	ChemsLexerCHAR          = 8
	ChemsLexerSTRING        = 9
	ChemsLexerBOOLEAN       = 10
	ChemsLexerID            = 11
	ChemsLexerTK_PUNTO      = 12
	ChemsLexerTK_PUNTOCOMA  = 13
	ChemsLexerTK_COMA       = 14
	ChemsLexerTK_IGUAL      = 15
	ChemsLexerTK_MAYORIGUAL = 16
	ChemsLexerTK_MENORIGUAL = 17
	ChemsLexerTK_DIFIGUAL   = 18
	ChemsLexerTK_MAYOR      = 19
	ChemsLexerTK_MENOR      = 20
	ChemsLexerTK_MULT       = 21
	ChemsLexerTK_DIV        = 22
	ChemsLexerTK_MODULO     = 23
	ChemsLexerTK_MAS        = 24
	ChemsLexerTK_MENOS      = 25
	ChemsLexerTK_PARA       = 26
	ChemsLexerTK_PARC       = 27
	ChemsLexerTK_LLAVEA     = 28
	ChemsLexerTK_LLAVEC     = 29
	ChemsLexerTK_CORA       = 30
	ChemsLexerTK_CORC       = 31
	ChemsLexerWHITESPACE    = 32
	ChemsLexerTK_MULTI      = 33
	ChemsLexerTK_LINE       = 34
)
